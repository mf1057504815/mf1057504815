<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">


<!--        <import resource="spring-dao.xml"/>-->
<!--        <import resource="spring-service.xml"/>-->
<!--        <import resource="spring-mvc.xml"/>-->

        <context:component-scan base-package="com.dfby.service,com.dfby.controller,com.dfby.dao" />

        <!-- 1.关联数据库文件 -->
        <context:property-placeholder location="classpath:db.properties"/>
        <!-- 2.数据库连接池 -->
        <!--数据库连接池
            dbcp 半自动化操作 不能自动连接
            c3p0 自动化操作（自动的加载配置文件 并且设置到对象里面）
        -->
        <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">

                <!-- 配置连接池属性 -->
                <property name="driverClass" value="${jdbc.driver}"/>
                <property name="jdbcUrl" value="${jdbc.url}"/>
                <property name="user" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>

                <!-- c3p0连接池的私有属性 -->
                <property name="maxPoolSize" value="30"/>
                <property name="minPoolSize" value="10"/>
                <!-- 关闭连接后不自动commit -->
                <property name="autoCommitOnClose" value="false"/>
                <!-- 获取连接超时时间 -->
                <property name="checkoutTimeout" value="10000"/>
                <!-- 当获取连接失败重试次数 -->
                <property name="acquireRetryAttempts" value="2"/>
        </bean>

        <!-- 3.配置SqlSessionFactory对象 -->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
                <!-- 注入数据库连接池 -->
                <property name="dataSource" ref="dataSource"/>
                <!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
                <property name="configLocation" value="classpath:mybatis-config.xml"/>
                <property name="mapperLocations" value="classpath:mapping/*"/>
        </bean>

        <!-- 4.配置扫描Dao接口包，动态实现Dao接口注入到spring容器中 -->
        <!--解释 ：https://www.cnblogs.com/jpfss/p/7799806.html-->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                <!-- 注入sqlSessionFactory -->
                <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
                <!-- 给出需要扫描Dao接口包 -->
                <property name="basePackage" value="com.dfby.dao"/>
        </bean>

        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
                <!-- 注入数据库连接池（数据源） -->
                <property name="dataSource" ref="dataSource" />
        </bean>

        <!-- 配置SpringMVC -->
        <!-- 1.开启SpringMVC注解驱动 -->
        <mvc:annotation-driven />
        <!-- 2.静态资源默认servlet配置（静态资源过滤）-->
        <mvc:default-servlet-handler/>

        <!-- 3.视图解析器（配置jsp 显示ViewResolver视图解析器）-->
        <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
                <property name="prefix" value="/WEB-INF/jsp/" />
                <property name="suffix" value=".jsp" />
        </bean>

        <!-- 4.扫描包：controller （扫描web相关的bean）-->
        <context:component-scan base-package="com.dfby.controller" />

<!--        <mvc:annotation-driven >-->
<!--                <mvc:message-converters>-->
<!--                        &lt;!&ndash; 设置返回字符串编码 &ndash;&gt;-->
<!--                        <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">-->
<!--                                <property name = "supportedMediaTypes">-->
<!--                                        <list>-->
<!--                                                <value>text/html;charset=UTF-8</value>-->
<!--                                                <value>application/json;charset=UTF-8</value>-->
<!--                                        </list>-->
<!--                                </property>-->
<!--                        </bean>-->
<!--                        &lt;!&ndash; json转换器 &ndash;&gt;-->
<!--                        <bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
<!--                                <property name="supportedMediaTypes">-->
<!--                                        <list>-->
<!--                                                <value>text/html;charset=UTF-8</value>-->
<!--                                                <value>application/json;charset=UTF-8</value>-->
<!--                                        </list>-->
<!--                                </property>-->
<!--                        </bean>-->
<!--                </mvc:message-converters>-->
<!--        </mvc:annotation-driven>-->

<!--        <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
<!--                <property name="supportedMediaTypes">-->
<!--                        <list>-->
<!--                                <value>application/json;charset=UTF-8</value>-->
<!--                        </list>-->
<!--                </property>-->
<!--        </bean>-->

</beans>


